name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:
    inputs:
      product_api_ip:
        required: true
        default: 'http://135.171.176.121:8000'
      order_api_ip:
        required: true
        default: 'http://20.6.51.145:8001'
      aks_cluster_name:
        required: true
        default: 'sit722-task8p-cluster'
      aks_resource_group:
        required: true
        default: 'sit722-task8p-rg'

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

      - run: |
          sed -i "s|_PRODUCT_API_URL_|${{ inputs.product_api_ip }}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|${{ inputs.order_api_ip }}|g" frontend/main.js
          echo "✅ Injected backend IPs into frontend/main.js"

      - run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:latest ./frontend/
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:latest

      - uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ inputs.aks_resource_group }}
          cluster-name: ${{ inputs.aks_cluster_name }}

      - run: |
          cd k8s/
          kubectl apply -f frontend.yaml
          echo "✅ Frontend deployed"

      - run: az logout
        if: always()
