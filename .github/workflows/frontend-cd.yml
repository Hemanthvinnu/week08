name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:
    inputs:
      product_api_ip:
        description: 'External IP of Product Service'
        required: true
      order_api_ip:
        description: 'External IP of Order Service'
        required: true
      aks_cluster_name:
        description: 'Name of the AKS Cluster'
        required: true
        default: 'week09-aks'
      aks_resource_group:
        description: 'Resource Group of the AKS Cluster'
        required: true
        default: 'week09-rg'

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group ${{ github.event.inputs.aks_resource_group }} --name ${{ github.event.inputs.aks_cluster_name }} --overwrite-existing

      - name: Inject Backend IPs into Frontend
        run: |
          sed -i "s|_PRODUCT_API_URL_|${{ github.event.inputs.product_api_ip }}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|${{ github.event.inputs.order_api_ip }}|g" frontend/main.js

      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:latest ./frontend/
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:latest

      - name: Deploy Frontend to AKS
        run: |
          cd k8s/
          kubectl apply -f frontend.yaml

      - name: Logout from Azure
        run: az logout
